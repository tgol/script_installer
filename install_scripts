#!/bin/ksh

# compatibilite avec le '-z' HP-UX
set +u

################################################################################
# CONFIG
################################################################################
# mettre la variable suivante a false pour lancer le script a blanc
ACTIVER_INSTALL=true

DOSSIER_SAUVEGARDE=".sauvegardes/$(basename "${0}")"

# fichier de logs
FICHIER_LOGS=".logs/$(basename "${0}").log"

SCRIPTS_A_INSTALLER=(
/home/thomas/src/script_installer/test_dest/dir1/script1
/home/thomas/src/script_installer/test_dest/dir1/dir11/script11
/home/thomas/src/script_installer/test_dest/dir2/script2
)

################################################################################

# suffix date secondes pour le fichier de logs
DATEYYYYMMDD="$(date +"%Y%m%d")"
DATEYYYYMMDDHHMMSS="$(date +"%Y%m%d%H%M%S")"
LOG_FILE="${FICHIER_LOGS}_${DATEYYYYMMDDHHMMSS}"
mkdir -p "$(dirname "${LOG_FILE}")"
true > "${LOG_FILE}"

# suffixe date par defaut pour le repertoire de sauvegarde
DOSSIER_SAUVEGARDE_DATE="${DOSSIER_SAUVEGARDE}_${DATEYYYYMMDD}"

function log_info
{
	if [ -f "${LOG_FILE}" ]
	then
		echo -e "$(date +"%Y-%m-%d %H:%M:%S") INFO: ${*}" | tee -a "${LOG_FILE}"
	else
		echo -e "$(date +"%Y-%m-%d %H:%M:%S") INFO: ${*}"
	fi
}

function log_warn
{
	if [ -f "${LOG_FILE}" ]
	then
		echo -e "$(date +"%Y-%m-%d %H:%M:%S") \\033[33mWARN: ${*}\\033[00m" | tee -a "${LOG_FILE}"
	else
		echo -e "$(date +"%Y-%m-%d %H:%M:%S") \\033[33mWARN: ${*}\\033[00m"
	fi
}

function log_err
{
	if [ -f "${LOG_FILE}" ]
	then
		echo -e "$(date +"%Y-%m-%d %H:%M:%S") \\033[31mERROR: ${*}\\033[00m" | tee -a "${LOG_FILE}"
	else
		echo -e "$(date +"%Y-%m-%d %H:%M:%S") \\033[31mERROR: ${*}\\033[00m"
	fi
}

log_info "Debut"

USAGE="\\n\
	USAGE: $0 [restore [<repertoire>]]\\n\
	\\n\
	sauvegarde, installation, restauration de scripts
	\\n\
	$0:                      sauvegarde et installation des scripts\\n\
	$0 restore:              sauvegarde et installation des scripts sauvegardes dans le dossier du jour\\n\
	$0 restore <repertoire>: sauvegarde et installation des scripts sauvegardes dans le dossier specifie\\n\
"

# on se positionne dans le repertoire du script
SCRIPTDIR="$( cd -P -- "$(dirname -- "$(command -v -- "$0")")" && pwd -P )"
! cd "${SCRIPTDIR}" && log_err "Echec d'acces au repertoire du script (${SCRIPTDIR})" && exit 1;

# recuperation des options
ACTIVER_RESTORE=false
ACTIVER_RESTORE_JOUR=false
ACTIVER_RESTORE_ARG=false
if [ $# -gt 0 ]; then
	if [ "${1}" != "restore" ]; then echo -e "${USAGE}"; exit 1; fi
	if [ "$#" = 1 ]
	then
		if [ ! -d "${DOSSIER_SAUVEGARDE_DATE}" ]; then
			log_err "Le repertoire de restauration n'existe pas (${DOSSIER_SAUVEGARDE_DATE})" && exit 1;
		fi
		ACTIVER_RESTORE=true;
		ACTIVER_RESTORE_JOUR=true;
	elif [ "$#" != 2 ]
	then
		echo -e "${USAGE}"; exit 1;
	else
		if [ ! -d "${2}" ]; then
			log_err "Le repertoire de restauration n'existe pas (${2})" && exit 1;
		fi
		ACTIVER_RESTORE=true;
		ACTIVER_RESTORE_ARG=true;
	fi
fi

typeset -A SCRIPTS
i=0

# verification de la config et construction du tableau de scripts a installer
for conf_entry in "${SCRIPTS_A_INSTALLER[@]}"
do
	log_info "verification - ${conf_entry}"
	if "${ACTIVER_RESTORE_JOUR}"; then
		SCRIPTS[$i][0]="${DOSSIER_SAUVEGARDE_DATE}/$(basename "${conf_entry}")"
	elif "${ACTIVER_RESTORE_ARG}"; then
		SCRIPTS[$i][0]="${2}/$(basename "${conf_entry}")"
	else
		SCRIPTS[$i][0]="$(basename "${conf_entry}")"
	fi

	SCRIPTS[$i][1]="$(dirname "${conf_entry}")"

	# WARNINGS si le script de destination n'est pas present ou non executable
	# ignorer si c'est un nouveau script sur le systeme
	if [ ! -f "${conf_entry}" ]; then log_warn "verification - ${conf_entry} n'est pas present sur le systeme";
	elif [ ! -x "${conf_entry}" ]; then log_warn "verification - ${conf_entry} n'est pas executable"; fi

	# on a besoin d'un script executable a livrer et de son repertoire de destination
	if [ ! -d "${SCRIPTS[$i][1]}" ]; then log_err "verification - Le dossier d'installation [${SCRIPTS[$i][1]}] n'existe pas"; exit 1; fi
	if [ ! -f "${SCRIPTS[$i][0]}" ]; then
		if "${ACTIVER_RESTORE}"; then
			log_warn "verification - Le script [${SCRIPTS[$i][0]}] n'est pas present dans le repertoire de restauration";
		else
			log_err "verification - Le script [${SCRIPTS[$i][0]}] n'est pas present dans le repertoire de livraison"; exit 1;
		fi
	elif [ ! -x "${SCRIPTS[$i][0]}" ]; then
		if "${ACTIVER_RESTORE}"; then
			log_warn "verification - Le script [${SCRIPTS[$i][0]}] n'est pas executable dans le repertoire de restauration";
		else
			log_err "verification - Le script [${SCRIPTS[$i][0]}] n'est pas executable dans le repertoire de livraison"; exit 1;
		fi
	fi

	((i=i+1))
done
dim=$((i-1))


# sauvegarde de l'existant:

# creation du repertoire de sauvegarde
if ! "${ACTIVER_RESTORE}"; then
	if [ -d "${DOSSIER_SAUVEGARDE_DATE}" ]; then
		log_warn "sauvegarde - Le dossier du jour existe deja !";
		DOSSIER_SAUVEGARDE_DATE="${DOSSIER_SAUVEGARDE}_$(date +"%Y%m%d%H%M%S")"
		log_warn "sauvegarde - Sauvegarde des fichiers dans ${DOSSIER_SAUVEGARDE_DATE}";
		log_warn "sauvegarde - Pour restaurer ce dossier plutot que celui du jour: ${0} restore ${DOSSIER_SAUVEGARDE_DATE}";
	fi
	log_info "sauvegarde - Repertoire [ ${DOSSIER_SAUVEGARDE_DATE} ]"
	! mkdir -p "${DOSSIER_SAUVEGARDE_DATE}" && log_err "Echec de creation du repertoire de sauvegarde" && exit 1;

	for j in {0..$dim}
	do
		log_info "sauvegarde - ${SCRIPTS[$j][1]}/${SCRIPTS[$j][0]}"
		if [ ! -f "${SCRIPTS[$j][1]}/${SCRIPTS[$j][0]}" ]; then
			log_warn "sauvegarde - pas de sauvegarde pour ${SCRIPTS[$j][1]}/${SCRIPTS[$j][0]}";
		elif "${ACTIVER_INSTALL}"; then
			! cp "${SCRIPTS[$j][1]}/${SCRIPTS[$j][0]}" "${DOSSIER_SAUVEGARDE_DATE}" && log_err "Echec de la copie" && exit 1
		fi
	done

	# en mode inactif on supprime le dossier de sauvegarde vide
	! "${ACTIVER_INSTALL}" && [ -d "${DOSSIER_SAUVEGARDE_DATE}" ] && rmdir "${DOSSIER_SAUVEGARDE_DATE}"
fi


# confirmation utilisateur
echo
if ! "${ACTIVER_RESTORE}"; then
	echo "Selectionner:"
	options=("Installer" "Abandonner")
else
	"${ACTIVER_RESTORE_JOUR}" && echo "Restaurer ${DOSSIER_SAUVEGARDE_DATE} ?"
	"${ACTIVER_RESTORE_ARG}" && echo "Restaurer ${2} ?"
	options=("Restaurer" "Abandonner")
fi

select opt in "${options[@]}"
do
	case $opt in
	"Installer") echo; break ;;
	"Restaurer") echo; break ;;
	"Abandonner") echo; log_info "Abandon"; exit 0 ;;
	*) echo Option invalide;;
	esac
done

# installation des scripts
for j in {0..$dim}
do
	log_info "installation - ${SCRIPTS[$j][1]}/${SCRIPTS[$j][0]}"
	if [ "${ACTIVER_RESTORE}" ] && [ ! -f "${SCRIPTS[$j][0]}" ]; then
		log_warn "installation - Pas de copie de ${SCRIPTS[$j][0]}"
	elif "${ACTIVER_INSTALL}"; then
		! cp "${SCRIPTS[$j][0]}" "${SCRIPTS[$j][1]}" && log_err "Echec de la copie" && exit 1
	fi
done
log_info "Fin"
